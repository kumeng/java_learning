<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- mapper  中namespace属性，绑定该xml到某个接口 ，代码中执行那个接口，mybatais会找到绑定xml的中对应的sql执行 -->
<mapper namespace="scanerpac.mybatisDao.user.User1AccountDao">
  <resultMap id="BaseResultMap" type="scanerpac.entity.user.User1AccountKey">
    <id column="USERID" jdbcType="BIGINT" property="userid" />
    <id column="ACCOUNTID" jdbcType="BIGINT" property="accountid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <if test="fields == null">
      USERID, ACCOUNTID
    </if>
    <if test="fields != null">
      ${fields}
    </if>
  </sql>
  <select id="selectByExample" parameterType="scanerpac.entity.user.User1AccountQuery" resultMap="BaseResultMap">
    <if test="startRow != null" >
        select * from (  
    </if>    
     select 
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from BASIC_USER1ACCOUNT
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="startRow != null">
       ) where rownum &gt;=#{startRow} and rownum &lt; (#{startRow}+#{pageSize}) 
    </if>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="scanerpac.entity.user.User1AccountKey">
    delete from BASIC_USER1ACCOUNT
    where USERID = #{userid,jdbcType=DECIMAL}
      and ACCOUNTID = #{accountid,jdbcType=DECIMAL}
  </delete>
  <delete id="deleteByExample" parameterType="scanerpac.entity.user.User1AccountQuery">
    delete from BASIC_USER1ACCOUNT
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="scanerpac.entity.user.User1AccountKey">
    insert into BASIC_USER1ACCOUNT (USERID, ACCOUNTID)
    values (#{userid,jdbcType=DECIMAL}, #{accountid,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="scanerpac.entity.user.User1AccountKey">
    insert into BASIC_USER1ACCOUNT
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        USERID,
      </if>
      <if test="accountid != null">
        ACCOUNTID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        #{userid,jdbcType=DECIMAL},
      </if>
      <if test="accountid != null">
        #{accountid,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="scanerpac.entity.user.User1AccountQuery" resultType="java.lang.Integer">
    select count(*) from BASIC_USER1ACCOUNT
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update BASIC_USER1ACCOUNT
    <set>
      <if test="record.userid != null">
        USERID = #{record.userid,jdbcType=DECIMAL},
      </if>
      <if test="record.accountid != null">
        ACCOUNTID = #{record.accountid,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update BASIC_USER1ACCOUNT
    set USERID = #{record.userid,jdbcType=DECIMAL},
      ACCOUNTID = #{record.accountid,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>
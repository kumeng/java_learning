总体来说设计模式分为三大类：

创建型模式，共五种：工厂方法模式、抽象工厂模式、单例模式、建造者模式、原型模式。

结构型模式，共七种：适配器模式、装饰器模式、代理模式、外观模式、桥接模式、组合模式、享元模式。

行为型模式，共十一种：策略模式、模板方法模式、观察者模式、迭代子模式、责任链模式、命令模式、备忘录模式、状态模式、访问者模式、中介者模式、解释器模式。

其实还有两类：并发型模式和线程池模式。


对象的创建会消耗掉系统的很多资源，所以单独对对象的创建进行研究，从而能够高效地创建对象就是创建型模式要探讨的问题
简单工厂模式（Simple Factory）
工厂方法模式（Factory Method）
抽象工厂模式（Abstract Factory）
创建者模式（Builder）
原型模式（Prototype）
单例模式（Singleton）


对象的组成以及对象之间的依赖关系
如何设计对象的结构、继承和依赖关系会影响到后续程序的维护性、代码的健壮性、耦合性等
外观模式/门面模式（Facade门面模式）
适配器模式（Adapter）
代理模式（Proxy）
装饰模式（Decorator）
桥梁模式/桥接模式（Bridge）
组合模式（Composite）
享元模式（Flyweight）


行为型模式:
模板方法模式（Template Method）
观察者模式（Observer）  (又叫发布订阅模式)
状态模式（State）
策略模式（Strategy）
职责链模式（Chain of Responsibility）
命令模式（Command）
访问者模式（Visitor）
调停者模式（Mediator）
备忘录模式（Memento）
迭代器模式（Iterator）
解释器模式（Interpreter）



代理模式
什么是代理？
通过代理控制对象的访问,可以详细访问某个对象的方法，在这个方法调用处理，或调用后处理。
既(AOP微实现)  ,AOP核心技术面向切面编程。

代理应用场景
安全代理可以屏蔽真实角色
远程代理远程调用代理类RMI
延迟加载先加载轻量级代理类,真正需要在加载真实类


代理的分类
静态代理(需要自定义代理类)
动态代理(动态生成代理类)
	Jdk自带动态代理
	Cglib、javaassist（字节码操作库）


JDK动态代理(不需要生成代理类)
实现InvocationHandler就可以了。

CGLIB动态代理


CGLIB与JDK动态代理区别
区别：
java动态代理是利用反射机制生成一个实现代理接口的匿名类，在调用具体方法前
调用InvokeHandler来处理。而cglib动态代理是利用asm开源包，对代理对象类的class文件加载进来
，通过修改其字节码生成子类来处理。
1、如果目标对象实现了接口，默认情况下会采用JDK的动态代理实现AOP 
2、如果目标对象实现了接口，可以强制使用CGLIB实现AOP 
3、如果目标对象没有实现了接口，必须采用CGLIB库，spring会自动在JDK动态代理和CGLIB之间转换


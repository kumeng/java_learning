1 栈(stack)与堆(heap)都是Java用来在Ram中存放数据的地方。与C++不同，Java自动管理栈和堆，程序员不能直接地设置栈或堆。
   
   堆(heap)，非堆-栈(stack),非堆-方法区(包含常量池)


2 栈的优势是，存取速度比堆要快 .缺点是，存在栈中的数据大小与生存期必须是确定的，缺乏灵活性。另外，栈数据在栈内共享
	这个共享的意义看第4点 

3 堆的优势是可以动态地分配内存大小，所有使用new xxx()构造出来的对象都在堆中存储，生存期也不必事先告诉编译器，
	Java的垃圾收集器会自动收走这些不再使用的数据。但缺点是，由于要在运行时动态分配内存，存取速度较慢

4 示例
int a = 3; 
int b = 3;
编译器先处理int a = 3；首先它会在栈中创建一个变量为a的引用，然后查找有没有字面值为3的地址，没找到，
就开辟一个存放3这个字面值的地址，然后将a指向3的地址。接着处理int b = 3；在创建完b的引用变量后，
由于在栈中已经有3这个字面值，便将b直接指向3的地址。这样，就出现了a与b同时均指向3的情况。也就是a 和 b共享 数字3

5 引用数据类型
如Integer, String, Double等将相应的基本数据类型包装起来的类。这些类数据全部存在于堆中，
Java用new()语句来显示地告诉编译器，在运行时才根据需要动态创建，因此比较灵活，但缺点是要占用更多的时间

关于String str = "abc"的内部工作。Java内部将此语句转化为以下几个步骤：
(1) 先定义一个名为str的对String类的对象引用变量放入栈stack)中。    (引用变量在栈stack中)
(2) 在常量池中查找是否存在内容为"abc"字符串对象。				(非堆-方法区中)
(3) 如果不存在则在常量池中创建"abc"，并让str引用该对象。
(4) 如果存在则直接让str引用该对象。

6. 我们再来看看 String str = new String("abc")创建过程
(1) 先定义一个名为str的对String类的对象引用变量放入栈stack中。    (引用变量在栈stack中)
(2) 然后在堆中（不是常量池）创建一个指定的对象，并让str引用指向该对象。
(3) 在常量池中查找是否存在内容为"abc"字符串对象。
(4) 如果不存在，则在常量池中创建内容为"abc"的字符串对象，并将堆中的对象与之联系起来。
(5) 如果存在，则将new出来的字符串对象与字符串常量池中的对象联系起来（即让那个特殊的成员变量value的指针指向它）


7.双等号==的含义

基本数据类型之间应用双等号，比较的是他们的数值。
复合数据类型(类)之间应用双等号，比较的是他们在内存中的存放地址。

个人理解：不管基本类型还是引用类型，==比较是值的内存地址.

6 常量池的好处

常量池是为了避免频繁的创建和销毁对象而影响系统性能，其实现了对象的共享。
例如字符串常量池，在编译阶段就把所有的字符串文字放到一个常量池中。
（1）节省内存空间：常量池中所有相同的字符串常量被合并，只占用一个空间。
（2）节省运行时间：比较字符串时，==比equals()快。对于两个引用变量，只用==判断引用是否相等，也就可以判断实际值是否相等。


Vector与ArrayList区别
1.ArrayList是最常用的List实现类，内部是通过数组实现的，它允许对元素进行快速随机访问。
数组的缺点是每个元素之间不能有间隔，当数组大小不满足时需要增加存储能力，就要讲已经有数组
的数据复制到新的存储空间中。当从ArrayList的中间位置插入或者删除元素时，需要对数组进行
复制、移动、代价比较高。因此，它适合随机查找和遍历，不适合插入和删除。
2.Vector与ArrayList一样，也是通过数组实现的，不同的是它支持线程的同步，即某一时刻
只有一个线程能够写Vector，避免多线程同时写而引起的不一致性，但实现同步需要很高的花费，
因此，访问它比访问ArrayList慢

LinkedList在增加和删除方面效率比ArrayList要高


HasTable与HasMap
1.HashMap不是线程安全的 
HastMap是一个接口 是map接口的子接口，是将键映射到值的对象，其中键和值都是对象，并且不能包含重复键，但可以包含重复值。HashMap允许null key和null value，而hashtable不允许。
2.HashTable是线程安全的一个Collection。
3.HashMap是Hashtable的轻量级实现（非线程安全的实现），他们都完成了Map接口，主要区别在于HashMap允许空（null）键值（key）,由于非线程安全，效率上可能高于Hashtable。
HashMap允许将null作为一个entry的key或者value，而Hashtable不允许。
HashMap把Hashtable的contains方法去掉了，改成containsvalue和containsKey。
注意: HashTable线程安全，HashMap线程不

